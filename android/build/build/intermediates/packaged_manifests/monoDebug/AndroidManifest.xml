<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.MagicalBalloonADventure"
    android:installLocation="auto"
    android:versionCode="1"
    android:versionName="1.0.0" >

    <uses-sdk
        android:minSdkVersion="24"
        android:targetSdkVersion="34" />

    <supports-screens
        android:largeScreens="true"
        android:normalScreens="true"
        android:smallScreens="true"
        android:xlargeScreens="true" />

    <uses-feature
        android:glEsVersion="0x00030000"
        android:required="true" />
    <uses-feature
        android:name="android.hardware.vulkan.level"
        android:required="false"
        android:version="1" />
    <uses-feature
        android:name="android.hardware.vulkan.version"
        android:required="true"
        android:version="0x400003" />
    <!-- Khronos OpenXR loader manifest content (v1.0.34) -->
    <uses-permission android:name="org.khronos.openxr.permission.OPENXR" />
    <uses-permission android:name="org.khronos.openxr.permission.OPENXR_SYSTEM" />

    <queries>

        <!-- to talk to the broker -->
        <provider android:authorities="org.khronos.openxr.runtime_broker;org.khronos.openxr.system_runtime_broker" />

        <!-- so client-side code of runtime/layers can talk to their service sides -->
        <intent>
            <action android:name="org.khronos.openxr.OpenXRRuntimeService" />
        </intent>
        <intent>
            <action android:name="org.khronos.openxr.OpenXRApiLayerService" />
        </intent>
    </queries> <!-- Khronos OpenXR loader manifest content (v1.0.34) -->
    <uses-feature
        android:name="android.hardware.vr.headtracking"
        android:required="false"
        android:version="1" />

    <application
        android:allowBackup="false"
        android:appCategory="game"
        android:appComponentFactory="androidx.core.app.CoreComponentFactory"
        android:debuggable="true"
        android:extractNativeLibs="false"
        android:hasFragileUserData="false"
        android:icon="@mipmap/icon"
        android:isGame="true"
        android:label="@string/godot_project_name_string"
        android:requestLegacyExternalStorage="false" >
        <activity
            android:name="com.godot.game.GodotApp"
            android:configChanges="layoutDirection|locale|orientation|keyboardHidden|screenSize|smallestScreenSize|density|keyboard|navigation|screenLayout|uiMode"
            android:excludeFromRecents="false"
            android:exported="true"
            android:label="@string/godot_project_name_string"
            android:launchMode="singleInstancePerTask"
            android:resizeableActivity="true"
            android:screenOrientation="landscape"
            android:theme="@style/GodotAppSplashTheme" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <!--
                    OpenXR category tag to indicate the activity starts in an immersive OpenXR mode.
					See https://registry.khronos.org/OpenXR/specs/1.0/html/xrspec.html#android-runtime-category.
                -->
                <category android:name="org.khronos.openxr.intent.category.IMMERSIVE_HMD" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <profileable
            android:enabled="true"
            android:shell="true" /> <!-- Records the version of the Godot editor used for building -->
        <meta-data
            android:name="org.godotengine.editor.version"
            android:value="4.4.1.stable.mono" /> <!-- Records the rendering method used by the Godot engine -->
        <meta-data
            android:name="org.godotengine.rendering.method"
            android:value="mobile" /> <!-- Records the version of the Godot library -->
        <meta-data
            android:name="org.godotengine.library.version"
            android:value="4.4.1.stable" />

        <service android:name="org.godotengine.godot.GodotDownloaderService" />

        <activity
            android:name="org.godotengine.godot.utils.ProcessPhoenix"
            android:exported="false"
            android:process=":phoenix"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />

        <provider
            android:name="androidx.core.content.FileProvider"
            android:authorities="com.example.MagicalBalloonADventure.fileprovider"
            android:exported="false"
            android:grantUriPermissions="true" >
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/godot_provider_paths" />
        </provider> <!-- Enable VR mode on Pico headsets -->
        <meta-data
            android:name="pvr.app.type"
            android:value="vr" />
        <meta-data
            android:name="pvr.sdk.version"
            android:value="OpenXR" />
        <meta-data
            android:name="pvr.display.orientation"
            android:value="180" />
        <meta-data
            android:name="pxr.sdk.version_code"
            android:value="5800" />
        <meta-data
            android:name="org.godotengine.plugin.v2.GodotOpenXR"
            android:value="org.godotengine.openxr.vendors.GodotOpenXR" />
        <meta-data
            android:name="org.godotengine.plugin.v2.GodotOpenXRHybridAppInternal"
            android:value="org.godotengine.openxr.vendors.GodotOpenXRHybridAppInternal" />

        <provider
            android:name="androidx.startup.InitializationProvider"
            android:authorities="com.example.MagicalBalloonADventure.androidx-startup"
            android:exported="false" >
            <meta-data
                android:name="androidx.profileinstaller.ProfileInstallerInitializer"
                android:value="androidx.startup" />
        </provider>

        <receiver
            android:name="androidx.profileinstaller.ProfileInstallReceiver"
            android:directBootAware="false"
            android:enabled="true"
            android:exported="true"
            android:permission="android.permission.DUMP" >
            <intent-filter>
                <action android:name="androidx.profileinstaller.action.INSTALL_PROFILE" />
            </intent-filter>
            <intent-filter>
                <action android:name="androidx.profileinstaller.action.SKIP_FILE" />
            </intent-filter>
            <intent-filter>
                <action android:name="androidx.profileinstaller.action.SAVE_PROFILE" />
            </intent-filter>
            <intent-filter>
                <action android:name="androidx.profileinstaller.action.BENCHMARK_OPERATION" />
            </intent-filter>
        </receiver>
    </application>

</manifest>